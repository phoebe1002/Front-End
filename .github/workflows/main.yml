# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node 14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install dependencies
        run: cd KwikKoderUI && npm ci
      - name: Build
        run: cd KwikKoderUI && npm run build:ci
      - name: Test
        run: cd KwikKoderUI && npm run test:ci
      - name: Archive build
        if: success()
        uses: actions/upload-artifact@v1
        with:
          name: deploy_dist
          path: KwikKoderUI/dist
      - name: Archive code coverage result
        if: success()
        uses: actions/upload-artifact@v1
        with:
          name: deploy_coverage
          path: KwikKoderUI/coverage
          

      - name: SonarCloud Scan
        # You may pin to the exact commit or the version.
        # uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
        uses: SonarSource/sonarcloud-github-action@v1.6
        with:
          # Set the sonar.projectBaseDir analysis property
          projectBaseDir: Front-End/KwikKoderUI
          # Additional arguments to the sonarcloud scanner
          args: >
            -Dsonar.organization=my-organization
            -Dsonar.projectKey=my-projectkey
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.sources=lib/
            -Dsonar.test.exclusions=tests/**
                -Dsonar.tests=tests/
                -Dsonar.verbose=true
